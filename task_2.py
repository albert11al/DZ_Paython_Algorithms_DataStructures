#648 В английском языке у нас есть понятие, называемое корнем, за которым может следовать
# какое-либо другое слово, образуя другое более длинное слово — назовем это слово преемником.
# Например, когда за корнем «an» следует слово-преемник «other», мы можем образовать новое слово «another».

#Дан словарь, состоящий из многих корней, и предложение, состоящее из слов, разделенных пробелами,
# замените все последователи в предложении на образующий его корень.
# Если преемник может быть заменен более чем одним корнем, замените его корнем с наименьшей длиной.

#Верните предложение после замены.

#Input: dictionary = ["cat", "bat", "rat"]          Ввод: словарь = ["кошка","летучая мышь","крыса"]
#sentence = "the cattle was rattled by the battery" предложение = "скот затрещал от батареи"
#Output: "the cat was rat by the bat"               Вывод: «кот был крысой летучей мыши»

class Solution(object):
    def replaceWords(self, dictionary, sentence):
        words = sentence.split()
        str = []
        for w in words:
            flag = 0
            for i in dictionary:
                if i in w and w.index(i) == 0:
                    flag = 1
                    str.append(i)
                    break
            if flag == 0:
                str.append(w)

        return " ".join(str)

'''разбор решения'''
        words = sentence.split() # разбиваем предложение по отдельным словам
        str = [] # результа проверки и замены слова будем добовлять в новый список
        for w in words: # в цикли вытаскиваем из списка-words слово-w
            flag = 0 # устанавливаем флаг =0,
            # если в дереве не встречается 1-ая буква слова и последуюшее всё слово из словаря-dictionary
            # то в список str добовляем слово-w из списка-words
            for i in dictionary:
                if i in w and w.index(i) == 0:
                    flag = 1 #устанавливаем флаг =1,
                    # если если в дереве встречается 1-ая буква слова и последуюшее всё слово из словаря-dictionary
                    str.append(i) # то в список str добовляем слово-i из словаря-dictionary
                    break
            if flag == 0:
                str.append(w)

        return " ".join(str) # возврашаем склеиный из сло результируюшее предложение


